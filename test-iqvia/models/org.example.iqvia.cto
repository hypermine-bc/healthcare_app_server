/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.example.iqvia

abstract participant Business identified by email {
  o String email
  o String firstName
  o String lastName
  o String password
  o Address address
}

concept Address {
  o String country
  o String city optional
  o String address optional
  o String mobile optional
  o String zip optional
}

participant Patient extends Business {
  //o Double accountBalance
}

participant IQVIA extends Business {
}

participant Charity extends Business {
  o Double transferBalance
}

participant Doctor extends Business {
}

participant Pharma extends Business {
}

/*asset patientAssset identified by requestId {
  o String requestId
  --> Patient patient
  --> Charity charity
  o Boolean signature
  o TransferType transferStatus
}

asset doctorAsset identified by requestId {
  o String requestId
  --> Doctor doctor
  --> Patient user
  --> Charity payer
  o Boolean signature
  o String comments
}

asset medicine identified by medicineId {
  o String medicineId
  --> Patient user
  o Double medPrince
  o String description
}*/

asset moneyAllotedToUser identified by requestId {
  o String requestId
  --> Patient user
  --> IQVIA netadmin
  --> Charity payer
  --> Doctor doctor
  o DateTime requestTime
  o TransferType currentStatus 
  o Double userAllotedMoney
}

asset payerMoney identified by payedId {
  o String payedId
  --> Charity payer
  o Double payerMoneyInitiated
  //o DateTime requestTime
  o TransferType currentStatus 
}

enum TransferType {
  o INIT
  o IN_PROGRESS
  o SUCCESS
  o FAILED
}

transaction SampleTransaction {
  --> moneyAllotedToUser asset
  o String newValue
}

transaction AddUserToChain {
}

transaction AddPayerToChain {
  o String email
  o String firstName
  o String lastName
  o String password
  o Address address
  o Double transferBalance
}

transaction AllotMoneyToUser {
  --> moneyAllotedToUser userAsset
  o Double newValue
}

transaction AllotMoneyToPayer {
  --> payerMoney payerAsset
  o Double newValue
}

transaction TestTransaction {
  --> payerMoney payerAsset
}